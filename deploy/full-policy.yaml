apiVersion: policy.open-cluster-management.io/v1
kind: Policy
metadata:
  name: poor-man-drs
  namespace: openshift-cnv
  annotations:
    policy.open-cluster-management.io/description: Policy to create VirtMigration Objects for OCP-V VM's on overloaded nodes.
spec:
  disabled: false
  policy-templates:
    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: drs-policy-obtain-node-values
        spec:
          object-templates-raw: |
            {{- $memory_usage_percentage := 50 }} 
            {{- $cpu_usage_percentage := 50 }}
            {{- $nodes := (lookup "v1" "Node" "" "" "node-role.kubernetes.io/worker").items }}

            {{- range $node := $nodes}}
              {{/* ## TODO: Logic to normalize measurement between Ki,Mi,Gi, assumption for now is usage and allocatable are same units ## */}}
              {{/* ## OCPBUG-https://issues.redhat.com/browse/OCPBUGS-25164 ## */}}
              
              
              {{- $node_name := $node.metadata.name }}
              {{- $node_metrics := (lookup "metrics.k8s.io/v1beta1" "NodeMetrics" "" $node_name) }}

              {{- $allocatable_cpu := $node.status.allocatable.cpu }}
              {{- $cpu_usage := $node_metrics.usage.cpu }}
              {{- $cpu_test2 :=  mul ( trunc (sub (len $allocatable_cpu ) 1 | toInt ) $allocatable_cpu ) $cpu_usage_percentage }}
              {{- $cpu_test3 :=  mul ( trunc (sub (len $cpu_usage) 1 | toInt ) $cpu_usage) 100 }}
              {{- $cpu_pressure := gt $cpu_test3 $cpu_test2}}


              {{- $allocatable_memory := $node.status.allocatable.memory }}
              {{- $memory_usage := $node_metrics.usage.memory }}
              {{- $mem_test2 :=  mul ( trunc (sub (len $allocatable_memory ) 2 | toInt ) $allocatable_memory ) $memory_usage_percentage }}
              {{- $mem_test3 :=  mul ( trunc (sub (len $memory_usage) 2 | toInt ) $memory_usage) 100 }}
              {{- $memory_pressure := gt $mem_test3 $mem_test2 }}

              {{- $nodeHasPressure := "none" }}
              {{- if or $cpu_pressure $memory_pressure }}
                {{- $nodeHasPressure = (printf "%s,%s" ($memory_pressure | ternary "memory_pressure" "") ($cpu_pressure | ternary "cpu_pressure" "")) }}
              {{- end }}

                - complianceType: musthave
                  objectDefinition:
                    kind: Node
                    apiVersion: v1
                    metadata:
                      name: {{ $node_name }}
                      labels:
                        acm.drs/node-pressure: '{{ $nodeHasPressure | trimAll "," }}'
              {{- if ne ($nodeHasPressure | trimAll ",") (dig "acm.drs/node-pressure" "" $node.metadata.labels) }}
                      annotations:
                        acm.drs/node-pressure-since: '{{ now | date "2006-01-02T15:04:05+00:00" }}'
              {{- end }}
            {{- end }}
          pruneObjectBehavior: None
          remediationAction: enforce
          severity: high
    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: drs-policy-rebalance-vms
        spec:
          object-templates-raw: |
            {{/* ## Get all nodes that are currently under pressure ## */}}
            {{- $nodes := (lookup "v1" "Node" "" "" "acm.drs/node-pressure!=none").items }}

            {{- range $node := $nodes}}
              {{/* ## Get all virtual machines that are running on the node ## */}}
              {{- $virtualmachines := (lookup "kubevirt.io/v1" "VirtualMachineInstance" "" "" "!acm-drs/exclude" 
                                                                (printf "kubevirt.io/nodeName=%s" $node.metadata.name)
                                      ).items }}

              {{- range $vm := $virtualmachines }}
                {{- $vm_name := $vm.metadata.name }}
                {{- $create_acm_vmim := true }}

                {{/* ## Check if there is an existing  VMIMigration CR for the VM ## */}}
                {{ $acm_vmi_migrations := (lookup "kubevirt.io/v1" "VirtualMachineInstanceMigration" $vm.metadata.namespace  "" (printf "kubevirt.io/vmi-name=%s" $vm_name)).items }}

                {{- range $vmim := $acm_vmi_migrations }}
                  {{- if not (has $vmim.status.phase (list "Failed" "Succeeded")) }}
                    {{- $create_acm_vmim = false }}
                  {{- end }}
                {{- end }}

                {{- if $create_acm_vmim }}
                    - complianceType: musthave
                      objectDefinition:
                        kind: VirtualMachineInstanceMigration
                        apiVersion: kubevirt.io/v1
                        metadata:
                            name: {{ $vm_name }}-{{ now.Unix }}-migration
                            namespace: {{ $vm.metadata.namespace }}
                            labels:
                              acm_requested_migration: "true"
                              acm_source_node: '{{ $vm_node }}'
                              acm_vm_name: '{{ $vm.status.nodeName }}'
                              acm_migration_reason: '{{ (dig "acm.drs/node-pressure" "" $node.metadata.labels)  }}'
                        spec:
                            vmiName: {{ $vm_name }}
                {{- end }}
              {{- end }}
            {{- end }}
          remediationAction: enforce
          severity: high
  remediationAction: enforce
---
apiVersion: cluster.open-cluster-management.io/v1beta1
kind: Placement
metadata:
  name: poor-man-drs-placement
  namespace: openshift-cnv
spec:
  clusterSets:
    - drs
  tolerations:
    - key: cluster.open-cluster-management.io/unreachable
      operator: Exists
    - key: cluster.open-cluster-management.io/unavailable
      operator: Exists
---
apiVersion: policy.open-cluster-management.io/v1
kind: PlacementBinding
metadata:
  name: poor-man-drs-placement-binding
  namespace: openshift-cnv
placementRef:
  name: poor-man-drs-placement
  apiGroup: cluster.open-cluster-management.io
  kind: Placement
subjects:
  - name: poor-man-drs
    apiGroup: policy.open-cluster-management.io
    kind: Policy
